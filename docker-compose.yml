services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./nginx.conf:/etc/nginx/nginx.conf"
      - "${NGINX_CERT}:/etc/nginx/ssl/fullchain.pem"
      - "${NGINX_KEY}:/etc/nginx/ssl/privkey.pem"
    depends_on:
      - bot
    networks:
      - django-network

  db:
    image: postgres:16
    container_name: db
    environment:
      POSTGRES_DB: ${POSTGRES_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
       - django-network

  web:
    build: .
    command: bash -c "cd chtozadano &&
                      python manage.py migrate &&
                      python manage.py collectstatic --no-input &&
                      gunicorn --config gunicorn_config.py chtozadano.wsgi:application"
    volumes:
      - .:/code
      - ./chtozadano/logs:/code/chtozadano/logs

    expose:
      - "8000"
    depends_on:
      - db
      - redis
    links:
      - db:db
    restart: always
    networks:
       - django-network

  bot:
    build: .
    volumes:
      - .:/code
    command: bash -c "cd chtozadano &&
                      python telegram_bot"
    depends_on:
      - web
    restart: always
    expose:
      - "8000"
    networks:
      - django-network

  cron:
    build: cron/
    volumes:
      - ./cron:/cron
    restart: always
    depends_on:
      - web
    networks:
      - django-network

  redis:
    image: redis:7.4.0-alpine
    hostname: redis
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - django-network

volumes:
  postgres_data:

networks:
  django-network:
    driver: bridge
