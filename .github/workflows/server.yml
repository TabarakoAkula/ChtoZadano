name: server CI

on:
  push:
    branches: ["server"]
  pull_request:
    branches: ["server"]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.10"]
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    - run: pip install -r requirements/dev.txt
    - name: Django setup
      run: |
        cd chtozadano
        python manage.py makemigrations
        python manage.py migrate
        python manage.py collectstatic --noinput
      env:
        POSTGRES_NAME: postgres
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
    - name: Django tests users
      run: |
        cd chtozadano
        python manage.py test users --debug-mode
      env:
          POSTGRES_NAME: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          API_KEY: 52ED8xBwcZ1PTykbQy
    - name: Django tests homework
      run: |
        cd chtozadano
        python manage.py test homework --debug-mode
      env:
        POSTGRES_NAME: postgres
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
        API_KEY: 52ED8xBwcZ1PTykbQy
    - name: Linting | Black
      run: |
        black --check chtozadano/
    - name: Linting | Flake8
      run: |
        flake8 --verbose chtozadano/
